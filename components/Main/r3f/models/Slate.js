/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useSpring } from "framer-motion";
import { useMotionAsState } from "framer-motion-hooks";
import * as THREE from "three";

export default function Slate(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/main/models/Slate.gltf");
  const scale = useSpring(props.ID ? 1 : 0, {
    damping: 200,
    stiffness: 1200,
    restDelta: 0.00001,
  });
  const scaleState = useMotionAsState(scale);
  useFrame(() => {
    // if (!props.ID || props.selected) return;
    if (props.ID && props.selected === "mt") {
      if (Math.abs(group.current.rotation.y - 0) < 0.01) return;
      let rotateY = group.current.rotation.y;
      let delta = Math.abs(rotateY - 0);
      let k = rotateY / Math.abs(rotateY);
      group.current.rotateY(delta * 0.15 * k * -1);
    }
    let k = props.ID ? 1 : -1;
    group.current.rotateY((Math.PI / 600) * k);
  });
  useEffect(() => {
    if (props.selected && props.ID) {
      scale.set(0);
    } else {
      scale.set(1);
    }
  }, [props.selected]);

  return (
    <group
      {...props}
      dispose={null}
      scale={scaleState ? scaleState : props.ID ? 1 : 0}
      position={[0, 0, 0]}
    >
      <mesh
        ref={group}
        geometry={nodes.Cube001.geometry}
        material={materials["Material.001"]}
        position={[0, 0, 0]}
        scale={[1.02, 1.032, 0.18]}
      />
    </group>
  );
}

useGLTF.preload("/main/models/Slate.gltf");
